// <auto-generated />
using System;
using MeetMe.Domain.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MeetMe.Service.Migrations
{
    [DbContext(typeof(MeetingsContext))]
    [Migration("20190816200829_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0-preview8.19405.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MeetMe.Domain.Models.Meeting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("MeetMe.Domain.Models.Meeting", b =>
                {
                    b.OwnsMany("MeetMe.Domain.Models.Proposal", "Proposals", b1 =>
                        {
                            b1.Property<Guid>("MeetingId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid");

                            b1.Property<DateTimeOffset>("Time")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("MeetingId", "Id");

                            b1.ToTable("Proposal");

                            b1.WithOwner()
                                .HasForeignKey("MeetingId");

                            b1.OwnsMany("MeetMe.Domain.Models.Vote", "Votes", b2 =>
                                {
                                    b2.Property<Guid>("ProposalMeetingId")
                                        .HasColumnType("uuid");

                                    b2.Property<Guid>("ProposalId")
                                        .HasColumnType("uuid");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Username")
                                        .HasColumnType("text");

                                    b2.HasKey("ProposalMeetingId", "ProposalId", "Id");

                                    b2.ToTable("Vote");

                                    b2.WithOwner()
                                        .HasForeignKey("ProposalMeetingId", "ProposalId");
                                });
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
